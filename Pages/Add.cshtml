@page

@model NSFWpics.Pages.AddModel
@{
    ViewData["Title"] = "Add";
}
<!--There have to be way for streamable, it look's like this <div style="width: 100%; height: 0px; position: relative; padding-bottom: 56.250%;"><iframe src="https://streamable.com/s/dxe6b/rzchgk" frameborder="0" width="100%" height="100%" allowfullscreen style="width: 100%; height: 100%; position: absolute;"></iframe></div>-->
<div class="container file_add">
    <div class="container center-align">
        <h1 class="center-align">Add</h1>
    </div>
    <br />
    <form method="post" enctype="multipart/form-data">
        <div class="container">
            <div class="input-field col s12 container" id="app2">
                <select name="UploadOption" v-model="uploadOption">
                    <option value="1">PNG/JPG/WEBP image</option>
                    <option value="2">GIF/APNG/WEBM video</option>
                    <!--<option value="3">Streamable</option>-->
                </select>
                <!--<input v-if="uploadOption == 3" type="url" placeholder="https://streamable.com/dxe6b"  name="streamable_link"/>-->
                <label v-else>Choose file type you'd like to upload</label>
            </div>
            <br />
            <div class="file-field input-field">
                <div class="btn blue lighten-1 waves-effect waves-light">
                    <i class="material-icons left">cloud</i>
                    <span>File</span>
                    <input type="file" asp-for="Upload">
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate " name="filepond" data-max-file-size="15MB" type="text" placeholder="Chose file to upload">
                </div>
            </div>
            <div class="preview">
                <p>No files currently selected for upload</p>
            </div>
            <div class="btn light-green darken-1 waves-effect waves-light">
                <i class="material-icons left">cloud_upload</i>
                <input type="submit" id="btnUpload" value="Upload">
            </div>
        </div>
    </form>
</div>
<br /><br />
      <script>
        var input = document.querySelector('input');
        var preview = document.querySelector('.preview');
        input.addEventListener('change', updateImageDisplay);
        function updateImageDisplay() {
          while(preview.firstChild) {
            preview.removeChild(preview.firstChild);
          }
          var curFiles = input.files;
          if(curFiles.length === 0) {
            var para = document.createElement('p');
            para.textContent = 'No files currently selected for upload';
            preview.appendChild(para);
          } else {
            var list = document.createElement('ol');
            preview.appendChild(list);
            for(var i = 0; i < curFiles.length; i++) {
              var listItem = document.createElement('li');
              var para = document.createElement('p');
              if(validFileType(curFiles[i])) {
                para.textContent = 'File name ' + curFiles[i].name + ', file size ' + returnFileSize(curFiles[i].size) + '.';
                var image = document.createElement('img');
                image.src = window.URL.createObjectURL(curFiles[i]);
                listItem.appendChild(image);
                listItem.appendChild(para);
              } else {
                para.textContent = 'File name ' + curFiles[i].name + ': Not a valid file type. Update your selection.';
                listItem.appendChild(para);
              }
              list.appendChild(listItem);
            }
          }
        }
        var fileTypes = [
          'image/jpeg',
          'image/pjpeg',
          'image/png'
        ]
        function validFileType(file) {
          for(var i = 0; i < fileTypes.length; i++) {
            if(file.type === fileTypes[i]) {
              return true;
            }
          }
          return false;
        }
        function returnFileSize(number) {
          if(number < 1024) {
            return number + 'bytes';
          } else if(number > 1024 && number < 1048576) {
            return (number/1024).toFixed(1) + 'KB';
          } else if(number > 1048576) {
            return (number/1048576).toFixed(1) + 'MB';
          }
        }
      </script>

