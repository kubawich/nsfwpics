<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSFWpics</name>
    </assembly>
    <members>
        <member name="P:NSFWpics.Interfaces.Credentials.Connection">
            <summary>
            Used to connect to MySQL DB
            </summary>
        </member>
        <member name="P:NSFWpics.Interfaces.Credentials.SftpConnection">
            <summary>
            Used to connect to SFTP server
            </summary>
        </member>
        <member name="M:NSFWpics.Models.Best.GetEntry(System.Nullable{System.Int32},NSFWpics.Models.Image)">
            <summary>
            Picks image with highest point rating
            </summary>
            <param name="image">Returns class based on DB table architecture</param>
            <returns>
            Returns Image module from DB where id's highest
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Main.GetAll(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole 'site' module. Each site has 10 view entries
            </summary>
            <param name="_id">Which site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 Image entities representing given id's site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Main.GetImages(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole 'site' module, but only image formats. Each site has 10 view entries
            </summary>
            <param name="_id">Which site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 Image entities representing given id's site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Main.GetVideos(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole 'site' module but animated formats only. Each site has 10 view entries
            </summary>
            <param name="_id">Which site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 videos entities representing given id's site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Main.Remove(System.Int32,System.String)">
            <summary>
            Removes content with given ID and extension
            </summary>
            <param name="_id">ID of content entry to remove</param>
            <param name="_extension">Content's file extension in ?extension=png/jpeg/webm... format </param>
        </member>
        <member name="M:NSFWpics.Models.Queue.GetAll(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole 'queue' module. Each queue site has 10 view entries
            </summary>
            <param name="_id">Which queue site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 Image entities representing given id's queue site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Queue.GetImages(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole queue 'site' module, but only image formats. Each site has 10 view entries
            </summary>
            <param name="_id">Which queue site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 Image entities representing given id's queue site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Queue.GetVideos(System.Int32,System.Collections.Generic.List{NSFWpics.Models.Image})">
            <summary>
            Returns whole queue 'site' module but animated formats only. Each site has 10 view entries
            </summary>
            <param name="_id">Which queue site's entries to get</param>
            <param name="_images">Returns class based on DB table architecture</param>
            <returns>
            List of 10 videos entities representing given id's queue site module
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Queue.Remove(System.Int32,System.String)">
            <summary>
            Removes content with given ID and extension from queue
            </summary>
            <param name="_id">ID of content entry to remove</param>
            <param name="_extension">Content's file extension in ?extension=png/jpeg/webm... format </param>
        </member>
        <member name="M:NSFWpics.Models.Random.GetEntry(System.Nullable{System.Int32},NSFWpics.Models.Image)">
            <summary>
            Picks number of indicies in database, and next pick random photo from first to maximum.
            </summary>
            <param name="image">Returns class based on DB table architecture</param>
            <returns>
            Image class represtantion filled with random DB entry
            </returns>
        </member>
        <member name="T:NSFWpics.Models.Tools">
            <summary>
            Database tools class, constains: maxId, plus, minus and image promotion
            </summary>
        </member>
        <member name="M:NSFWpics.Models.Tools.MaxId(System.Int32)">
            <summary>
            Gets last ID entrance from DB (0 = mine, 1 = mine images, 2 = mine videos, 3 = queue)
            </summary>
            <returns>
            Returns highest ID from DB
            0 = main
            1 = main images
            2 = main videos
            3 = queue
            5 = queue images
            5 = queue videos
            </returns>
        </member>
        <member name="M:NSFWpics.Models.Tools.Minus(System.Int32)">
            <summary>
            Decrement image's point rating by one
            </summary>
            <param name="_id">Number for identifying image in DB</param>
        </member>
        <member name="M:NSFWpics.Models.Tools.Plus(System.Int32)">
            <summary>
            Increment image's point rating by one
            </summary>
            <param name="_id">Number for identifying image in DB</param>
        </member>
        <member name="M:NSFWpics.Models.Tools.PromoteImage(System.Nullable{System.Int32})">
            <summary>
            Promotes image from queue to main page
            </summary>
            <param name="_id">Id of promoted image in queue, may be null for max value</param>
        </member>
        <member name="M:NSFWpics.Models.Upload.UploadToMain(System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Adds cdn's uploaded photo to DB
            </summary>
            <param name="_maxIdPlusOne">Required to increment photo's id in DB</param>l        
            <param name="_file">File to upload</param>
            <param name="_login">File to upload</param>
        </member>
        <member name="M:NSFWpics.Models.Upload.UploadToQueue(System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Adds cdn's uploaded photo to page's queue
            </summary>
            <param name="_maxIdPlusOne">Required to increment photo's id in DB</param>       
            <param name="_file">File to upload</param>
            <param name="_login">User who becomes owner of this picture</param>
        </member>
        <member name="M:NSFWpics.Models.User.#ctor">
            <summary>
            Ctor with default null values
            </summary>
        </member>
        <member name="M:NSFWpics.Models.User.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            ctor with already defined minimal values
            </summary>
            <param name="uid">User id</param>
            <param name="login">Login</param>
            <param name="password">Password</param>
            <param name="mail">E-Mail</param>
        </member>
        <member name="M:NSFWpics.Models.User.GetUser(System.Int32)">
            <summary>
            Retrives individual user from database
            </summary>
            <param name="_uid">User id to pick from DB</param>
            <returns>Dictionary of fields and it's values</returns>
        </member>
        <member name="M:NSFWpics.Models.User.GetUsers">
            <summary>
            Retrieves all users from database
            </summary>
            <returns>List of dictionaries of individual users, cuz it looks good as json</returns>
        </member>
        <member name="M:NSFWpics.Models.User.RegisterUser(System.String,System.String,System.String,System.String)">
            <summary>
            Registers new user to app
            </summary>
            <param name="_login">Login</param>
            <param name="_password">Password</param>
            <param name="_mail">E-Mail</param>
            <param name="_ip">user ip address</param>
            <returns>String status with action completion</returns>
        </member>
        <member name="M:NSFWpics.Models.User.LoginUser(System.String,System.String)">
            <summary>
            Logs in given user in app 
            </summary>
            <param name="_login">Identifer in DB</param>
            <param name="_password">User password</param>
            <returns>String with login status success/failure</returns>
        </member>
        <member name="M:NSFWpics.Models.User.UpdateUser(System.Int32,System.String,System.String)">
            <summary>
            Updates/changes user parameter with given id
            </summary>
            <param name="_uid">User id to make update on</param>
            <param name="_changeParam">Column name to update</param>
            <param name="_changeValue">New value for old resource at given column</param>
            <returns>String status of operation Updated/Failed</returns>
        </member>
        <member name="M:NSFWpics.Models.User.DeleteUser(System.Int32)">
            <summary>
            Deletes individual user from database
            </summary>
            <param name="_uid">Id for user to delete account</param>
            <returns>Infromation about deletion</returns>
        </member>
        <member name="T:NSFWpics.Models.View">
            <summary>
            Returns image with given id
            </summary>
        </member>
        <member name="M:NSFWpics.Models.View.GetEntry(System.Nullable{System.Int32},NSFWpics.Models.Image)">
            <summary>
            Returns image with given id
            </summary>
            <param name="_id">Number for identifying image in DB</param>
            <param name="_image">Returns class based on DB table architecture</param>
            <returns>
            Returns Image module from DB with given Image's id
            </returns>
        </member>
        <member name="T:NSFWpics.Pages.API.AddController">
             <summary>
             API endpoint used to upload image/webm/gif to server and index it to db
             </summary>
            No header!! Body as form-data, without key and desc, only value as file
        </member>
        <member name="T:NSFWpics.Pages.API.UsersController">
            <summary>
            API endpoint route for all actions connected to users in system i.e show/update/login/register/delete
            </summary>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Get">
            <summary>
            Get all users from DB
            </summary>
            <returns>JSON with all users in DB</returns>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Get(System.Int32)">
            <summary>
            Show user data with given id
            </summary>
            <param name="id">User identifeir in DB</param>
            <returns>User data with given id</returns>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Post(System.String,System.String)">
            <summary>
            Endpoint used to Login user to system
            </summary>
            <param name="login">Login used to identify user in system</param>
            <param name="password">SHA1 hash to identify user's identity in DB</param>
            <returns></returns>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Post(System.String,System.String,System.String)">
            <summary>
            Endpoint used to Register new user to system
            </summary>
            <param name="login">Login used to identify user in system</param>
            <param name="password">Password to identify user in DB presented as SHA1 hash</param>
            <param name="mail">Email address to identify user in system</param>
            <returns></returns>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Put(System.Int32,System.String,System.String)">
            <summary>
            Updates user's params in DB (supports only string params atm.)
            </summary>
            <param name="uid">User to update</param>
            <param name="param">name of parameter to change i.e. login/password/mail/uid/guid...</param>
            <param name="value">New value for param field</param>
            <returns>JSON with action status</returns>
        </member>
        <member name="M:NSFWpics.Pages.API.UsersController.Delete(System.Int32)">
            <summary>
            Deletes user with given uid
            </summary>
            <param name="uid">User's id to delete</param>
            <returns>JSON result of delete action</returns>
        </member>
        <member name="M:NSFWpics.Pages.ViewController.Delete(System.Int32,System.Int32,System.String)">
            <summary>
            Removes content with given ID and extension
            </summary>
            <param name="id">ID of content entry to remove</param>
            <param name="type">What site it's related to? Main or queue (0/1)</param>
            <param name="extension">Content's file extension in ?extension=png/jpeg/webm... format </param>
            <returns>Json with sucedeed status</returns>
        </member>
    </members>
</doc>
